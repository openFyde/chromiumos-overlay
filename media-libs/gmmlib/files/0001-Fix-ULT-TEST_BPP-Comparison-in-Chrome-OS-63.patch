From 50505ec3710059835f538b57a70ade713b3bf848 Mon Sep 17 00:00:00 2001
From: johnmach <john.machado@intel.com>
Date: Tue, 24 Aug 2021 15:01:41 +0530
Subject: [PATCH] Fix ULT TEST_BPP Comparison in Chrome OS (#63)

---
 Source/GmmLib/ULT/GmmGen12ResourceULT.cpp     | 4 ++--
 Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp | 4 ++--
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/Source/GmmLib/ULT/GmmGen12ResourceULT.cpp b/Source/GmmLib/ULT/GmmGen12ResourceULT.cpp
index 11fe08f..ccc5421 100644
--- a/Source/GmmLib/ULT/GmmGen12ResourceULT.cpp
+++ b/Source/GmmLib/ULT/GmmGen12ResourceULT.cpp
@@ -2114,7 +2114,7 @@ TEST_F(CTestGen12Resource, TestLinearCompressedResource)
         gmmParams.Format                         = SetResourceFormat(bpp);
         gmmParams.BaseWidth64                    = 0x1;
         gmmParams.BaseHeight                     = 1;
-        gmmParams.Flags.Info.AllowVirtualPadding = (bpp != 8); //OCL uses 8bpp buffers. doc doesn't comment if Linear buffer compr allowed or not on bpp!=8.
+        gmmParams.Flags.Info.AllowVirtualPadding = (bpp != TEST_BPP_8); //OCL uses 8bpp buffers. doc doesn't comment if Linear buffer compr allowed or not on bpp!=8.
 
         GMM_RESOURCE_INFO *ResourceInfo;
         ResourceInfo = pGmmULTClientContext->CreateResInfoObject(&gmmParams);
@@ -2159,7 +2159,7 @@ TEST_F(CTestGen12Resource, TestLinearCompressedResource)
         gmmParams.Format                         = SetResourceFormat(bpp);
         gmmParams.BaseWidth64                    = 0x1001;
         gmmParams.BaseHeight                     = 1;
-        gmmParams.Flags.Info.AllowVirtualPadding = (bpp != 8); //OCL uses 8bpp buffers. document doesn't comment if Linear buffer compr allowed or not on bpp!=8.
+        gmmParams.Flags.Info.AllowVirtualPadding = (bpp != TEST_BPP_8); //OCL uses 8bpp buffers. document doesn't comment if Linear buffer compr allowed or not on bpp!=8.
         gmmParams.Flags.Gpu.UnifiedAuxSurface    = 1;          //Turn off for separate aux creation
         gmmParams.Flags.Gpu.CCS                  = 1;
 
diff --git a/Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp b/Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp
index deefec2..22f055f 100644
--- a/Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp
+++ b/Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp
@@ -2094,7 +2094,7 @@ TEST_F(CTestGen12dGPUResource, DISABLED_TestLinearCompressedResource)
         gmmParams.Format                         = SetResourceFormat(bpp);
         gmmParams.BaseWidth64                    = 0x1;
         gmmParams.BaseHeight                     = 1;
-        gmmParams.Flags.Info.AllowVirtualPadding = (bpp != 8); //OCL uses 8bpp buffers. Specification doesn't comment if Linear buffer compr allowed or not on bpp!=8.
+        gmmParams.Flags.Info.AllowVirtualPadding = (bpp != TEST_BPP_8); //OCL uses 8bpp buffers. Specification doesn't comment if Linear buffer compr allowed or not on bpp!=8.
 
         GMM_RESOURCE_INFO *ResourceInfo;
         ResourceInfo = pGmmULTClientContext->CreateResInfoObject(&gmmParams);
@@ -2139,7 +2139,7 @@ TEST_F(CTestGen12dGPUResource, DISABLED_TestLinearCompressedResource)
         gmmParams.Format                         = SetResourceFormat(bpp);
         gmmParams.BaseWidth64                    = 0x1001;
         gmmParams.BaseHeight                     = 1;
-        gmmParams.Flags.Info.AllowVirtualPadding = (bpp != 8); //OCL uses 8bpp buffers. Specification doesn't comment if Linear buffer compr allowed or not on bpp!=8.
+        gmmParams.Flags.Info.AllowVirtualPadding = (bpp != TEST_BPP_8); //OCL uses 8bpp buffers. Specification doesn't comment if Linear buffer compr allowed or not on bpp!=8.
         gmmParams.Flags.Gpu.UnifiedAuxSurface    = 1;          //Turn off for separate aux creation
         gmmParams.Flags.Gpu.CCS                  = 1;
 
-- 
2.25.1

