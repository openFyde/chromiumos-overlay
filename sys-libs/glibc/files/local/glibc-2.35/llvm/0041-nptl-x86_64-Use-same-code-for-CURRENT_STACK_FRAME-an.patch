From 2cdad0a974c99571240c2e2635c9d4c7a94c508f Mon Sep 17 00:00:00 2001
From: Adhemerval Zanella <adhemerval.zanella@linaro.org>
Date: Tue, 8 Mar 2022 17:31:08 -0300
Subject: [PATCH 041/163] nptl: x86_64: Use same code for CURRENT_STACK_FRAME
 and stackinfo_get_sp

It avoids the possible warning of uninitialized 'frame' variable when
building with clang:

  ../sysdeps/nptl/jmp-unwind.c:27:42: error: variable 'frame' is
  uninitialized when used here [-Werror,-Wuninitialized]
    __pthread_cleanup_upto (env->__jmpbuf, CURRENT_STACK_FRAME);

The resulting code is similar to CURRENT_STACK_FRAME.

Checked on x86_64-linux-gnu.

(cherry picked from commit 8cd559cf5afe3894f92c2be6f972e1a4e38c56ca)
---
 sysdeps/x86/nptl/pthreaddef.h | 4 +++-
 sysdeps/x86_64/stackinfo.h    | 4 +++-
 2 files changed, 6 insertions(+), 2 deletions(-)

diff --git a/sysdeps/x86/nptl/pthreaddef.h b/sysdeps/x86/nptl/pthreaddef.h
index 63fdbcb27c..7df65931a3 100644
--- a/sysdeps/x86/nptl/pthreaddef.h
+++ b/sysdeps/x86/nptl/pthreaddef.h
@@ -42,7 +42,9 @@
 #ifdef __x86_64__
 /* The frame pointer is not usable.  */
 # define CURRENT_STACK_FRAME \
-  ({ register char *frame __asm__("rsp"); frame; })
+  ({ register void * p__ __asm__(RSP_REG); \
+     asm volatile("" : "=r" (p__)); \
+     p__; })
 #else
 # define CURRENT_STACK_FRAME	__builtin_frame_address (0)
 #endif
diff --git a/sysdeps/x86_64/stackinfo.h b/sysdeps/x86_64/stackinfo.h
index 34c9d0b576..7354632132 100644
--- a/sysdeps/x86_64/stackinfo.h
+++ b/sysdeps/x86_64/stackinfo.h
@@ -40,7 +40,9 @@
    for which they need to act as barriers as well, hence the additional
    (unnecessary) parameters.  */
 #define stackinfo_get_sp() \
-  ({ void *p__; asm volatile ("mov %%" RSP_REG ", %0" : "=r" (p__)); p__; })
+  ({ register void * p__ __asm__(RSP_REG); \
+     asm volatile("" : "=r" (p__)); \
+     p__; })
 #define stackinfo_sub_sp(ptr) \
   ({ ptrdiff_t d__;						\
      asm volatile ("sub %%" RSP_REG " , %0" : "=r" (d__) : "0" (ptr));	\
-- 
2.37.2

