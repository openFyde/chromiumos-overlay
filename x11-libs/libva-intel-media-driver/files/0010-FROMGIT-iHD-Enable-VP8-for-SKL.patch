From 06a885549807c56c3953b86adc1e489bfa6aa26a Mon Sep 17 00:00:00 2001
From: Gareth Yu <gareth.yu@intel.corp-partner.google.com>
Date: Fri, 12 Aug 2022 13:51:52 +0800
Subject: [PATCH] FROMGIT: iHD: Enable VP8 for SKL

Enable VP8 for SKL according to customer requirements

(cherry picked from commit  d5b3b800bc6bdfeacf9e9e0f4e51081ec2277c4e https://github.com/intel/media-driver.git)
Signed-off-by: Gareth Yu <gareth.yu@intel.corp-partner.google.com>
---
 media_driver/linux/gen9/ddi/media_sku_wa_g9.cpp |  9 +++++++++
 .../linux/ult/ult_app/RefCapsTable_SKL.h        |  1 +
 .../media_interfaces_g9_skl.cpp                 | 17 +++++++++++++++++
 .../media_interfaces_g9_skl.h                   |  6 ++++++
 4 files changed, 33 insertions(+)

diff --git a/media_driver/linux/gen9/ddi/media_sku_wa_g9.cpp b/media_driver/linux/gen9/ddi/media_sku_wa_g9.cpp
index af1b1efb4622..4b5c990bf746 100755
--- a/media_driver/linux/gen9/ddi/media_sku_wa_g9.cpp
+++ b/media_driver/linux/gen9/ddi/media_sku_wa_g9.cpp
@@ -45,6 +45,12 @@ static struct LinuxCodecInfo sklCodecInfo =
     .hevcEncoding       = SET_STATUS_BY_FULL_OPEN_SOURCE(1, 0),
     .jpegEncoding       = 1,
     .avcVdenc           = 1,
+    .vp9Decoding        = 0,
+    .hevc10Decoding     = 0,
+    .vp9b10Decoding     = 0,
+    .hevc10Encoding     = 0,
+    .hevc12Encoding     = 0,
+    .vp8Encoding        = SET_STATUS_BY_FULL_OPEN_SOURCE(1, 0),
 };
 
 static struct LinuxCodecInfo bxtCodecInfo =
@@ -137,6 +143,9 @@ static bool InitSklMediaSku(struct GfxDeviceInfo *devInfo,
         MEDIA_WR_SKU(skuTable, FtrEncodeHEVC, codecInfo->hevcEncoding);
         MEDIA_WR_SKU(skuTable, FtrEncodeJPEG, codecInfo->jpegEncoding);
         MEDIA_WR_SKU(skuTable, FtrEncodeAVCVdenc, codecInfo->avcVdenc);
+
+        /* VP8 enc */
+        MEDIA_WR_SKU(skuTable, FtrEncodeVP8, codecInfo->vp8Encoding);
     }
 
     MEDIA_WR_SKU(skuTable, FtrEnableMediaKernels, drvInfo->hasHuc);
diff --git a/media_driver/linux/ult/ult_app/RefCapsTable_SKL.h b/media_driver/linux/ult/ult_app/RefCapsTable_SKL.h
index d763edc152f9..533007088947 100644
--- a/media_driver/linux/ult/ult_app/RefCapsTable_SKL.h
+++ b/media_driver/linux/ult/ult_app/RefCapsTable_SKL.h
@@ -47,6 +47,7 @@ std::vector<FeatureID> refFeatureIDTable_SKL = {
     { VAProfileJPEGBaseline           , VAEntrypointVLD                 },
     { VAProfileJPEGBaseline           , VAEntrypointEncPicture          },
     { VAProfileVP8Version0_3          , VAEntrypointVLD                 },
+    { VAProfileVP8Version0_3          , VAEntrypointEncSlice            },
     { VAProfileHEVCMain               , VAEntrypointVLD                 },
     { VAProfileHEVCMain               , VAEntrypointEncSlice            },
     { VAProfileHEVCMain               , VAEntrypointFEI                 },
diff --git a/media_driver/media_interface/media_interfaces_m9_skl/media_interfaces_g9_skl.cpp b/media_driver/media_interface/media_interfaces_m9_skl/media_interfaces_g9_skl.cpp
index 6e1ce4942ac5..83c47c7be9df 100644
--- a/media_driver/media_interface/media_interfaces_m9_skl/media_interfaces_g9_skl.cpp
+++ b/media_driver/media_interface/media_interfaces_m9_skl/media_interfaces_g9_skl.cpp
@@ -467,6 +467,23 @@ MOS_STATUS CodechalInterfacesG9Skl::Initialize(
             }
         }
         else
+#endif
+#ifdef _VP8_ENCODE_SUPPORTED
+        if (info->Mode == CODECHAL_ENCODE_MODE_VP8)
+        {
+            // Setup encode interface functions
+            encoder = MOS_New(Encode::Vp8, hwInterface, debugInterface, info);
+            if (encoder == nullptr)
+            {
+                CODECHAL_PUBLIC_ASSERTMESSAGE("VP8 Encode allocation failed!");
+                return MOS_STATUS_INVALID_PARAMETER;
+            }
+            else
+            {
+                m_codechalDevice = encoder;
+            }
+        }
+        else
 #endif
         {
             CODECHAL_PUBLIC_ASSERTMESSAGE("Unsupported encode function requested.");
diff --git a/media_driver/media_interface/media_interfaces_m9_skl/media_interfaces_g9_skl.h b/media_driver/media_interface/media_interfaces_m9_skl/media_interfaces_g9_skl.h
index f9b8e48e5ce6..1b829145800b 100644
--- a/media_driver/media_interface/media_interfaces_m9_skl/media_interfaces_g9_skl.h
+++ b/media_driver/media_interface/media_interfaces_m9_skl/media_interfaces_g9_skl.h
@@ -101,6 +101,9 @@
 #ifdef _AVC_ENCODE_VDENC_SUPPORTED
 #include "codechal_vdenc_avc_g9_skl.h"
 #endif
+#ifdef _VP8_ENCODE_SUPPORTED
+#include "codechal_encode_vp8_g9.h"
+#endif
 #include "codechal_encode_csc_ds_g9.h"
 
 #include "codechal_memdecomp_g9.h"
@@ -203,6 +206,9 @@ public:
 #ifdef _AVC_ENCODE_VDENC_SUPPORTED
     using AvcVdenc = CodechalVdencAvcStateG9Skl;
 #endif
+#ifdef _VP8_ENCODE_SUPPORTED
+    using Vp8 = CodechalEncodeVp8G9;
+#endif
 };
 
 class CodechalInterfacesG9Skl : public CodechalDevice
-- 
2.31.0

