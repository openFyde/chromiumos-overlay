From 9b7843af271beda87c3503de8e7ee99c984b86c3 Mon Sep 17 00:00:00 2001
From: Andrzej Ostruszka <amo@semihalf.com>
Date: Tue, 8 Feb 2022 16:12:49 +0000
Subject: [PATCH] Fix handling of hostname argument

"hostname" argument (-h) is a simple string and is kept as a null
terminated string.  So we parse something that is meant to be null
terminated string do not attempt to parse it as a HW addressa (hex
string).  The same applies to "script" (-c) argument.
---
 src/if-options.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/src/if-options.c b/src/if-options.c
index edcda8fd..1545af81 100644
--- a/src/if-options.c
+++ b/src/if-options.c
@@ -288,6 +288,7 @@ add_environ(char ***array, const char *value, int uniq)
 #define PARSE_STRING_NULL	1
 #define PARSE_HWADDR		2
 #define parse_string(a, b, c) parse_str((a), (b), (c), PARSE_STRING)
+#define parse_nstring(a, b, c) parse_str((a), (b), (c), PARSE_STRING_NULL)
 #define parse_hwaddr(a, b, c) parse_str((a), (b), (c), PARSE_HWADDR)
 static ssize_t
 parse_str(char *sbuf, size_t slen, const char *str, int flags)
@@ -305,7 +306,7 @@ parse_str(char *sbuf, size_t slen, const char *str, int flags)
 			str++;
 			end = p;
 		}
-	} else {
+	} else if (flags != PARSE_STRING_NULL) {
 		l = (size_t)hwaddr_aton(NULL, str);
 		if ((ssize_t) l != -1 && l > 1) {
 			if (l > slen) {
@@ -763,7 +764,7 @@ parse_option(struct dhcpcd_ctx *ctx, const char *ifname, struct if_options *ifo,
 		ARG_REQUIRED;
 		if (ifo->script != default_script)
 			free(ifo->script);
-		s = parse_str(NULL, 0, arg, PARSE_STRING_NULL);
+		s = parse_nstring(NULL, 0, arg);
 		if (s == 0) {
 			ifo->script = NULL;
 			break;
@@ -774,8 +775,9 @@ parse_option(struct dhcpcd_ctx *ctx, const char *ifname, struct if_options *ifo,
 			logerr(__func__);
 			return -1;
 		}
-		parse_str(ifo->script, dl, arg, PARSE_STRING_NULL);
-		if (ifo->script[0] == '\0' ||
+		s = parse_nstring(ifo->script, dl, arg);
+		if (s == -1 ||
+		    ifo->script[0] == '\0' ||
 		    strcmp(ifo->script, "/dev/null") == 0)
 		{
 			free(ifo->script);
@@ -794,7 +796,7 @@ parse_option(struct dhcpcd_ctx *ctx, const char *ifname, struct if_options *ifo,
 			ifo->options |= DHCPCD_HOSTNAME;
 			break;
 		}
-		s = parse_string(ifo->hostname, HOSTNAME_MAX_LEN, arg);
+		s = parse_nstring(ifo->hostname, sizeof(ifo->hostname), arg);
 		if (s == -1) {
 			logerr("%s: hostname", __func__);
 			return -1;
@@ -803,7 +805,6 @@ parse_option(struct dhcpcd_ctx *ctx, const char *ifname, struct if_options *ifo,
 			logerrx("hostname cannot begin with .");
 			return -1;
 		}
-		ifo->hostname[s] = '\0';
 		if (ifo->hostname[0] == '\0')
 			ifo->options &= ~DHCPCD_HOSTNAME;
 		else
-- 
2.35.0.263.gb82422642f-goog

