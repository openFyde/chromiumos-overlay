At configure time, it sets LD=`$CC -print-prog-name=ld`. In our case,
it sets LD to gold linker, which causes the configure fail. This patch
remove the settings and glibc builds.

The configuration is suspicious though.

 * Configuring glibc for nptl
 *             ABI:   default
 *          CBUILD:   x86_64-pc-linux-gnu
 *           CHOST:   x86_64-pc-linux-gnu
 *         CTARGET:   armv7a-cros-linux-gnueabi
 *      CBUILD_OPT:
 *     CTARGET_OPT:
 *              CC:   armv7a-cros-linux-gnueabi-gcc
 *              LD:   x86_64-pc-linux-gnu-ld.bfd
 *         ASFLAGS:
 *          CFLAGS:   -pipe -ggdb -O2 -fno-strict-aliasing
 *        CPPFLAGS:
 *        CXXFLAGS:   -pipe -O2 -fno-strict-aliasing
 *         LDFLAGS:   -Wl,-O2 -Wl,--as-needed -Wl,-O2 -Wl,--as-needed -fuse-ld=bfd
 *       Manual CC:   armv7a-cros-linux-gnueabi-gcc  -Wl,-O2 -Wl,--as-needed -Wl,-O2 -Wl,--as-needed -fuse-ld=bfd

The LD probably should be armv7a-cros-linux-gnueabi-ld.bfd
--- glibc-2.23/configure	2016-05-12 15:35:53.760853518 -0700
+++ glibc-2.23/configure	2016-05-12 15:36:00.568831110 -0700
@@ -4323,7 +4323,7 @@
     CC="$CC -B$path_binutils"
 fi
 AS=`$CC -print-prog-name=as`
-LD=`$CC -print-prog-name=ld`
+LD=`$CC -print-prog-name=ld.bfd`
 AR=`$CC -print-prog-name=ar`
 
 OBJDUMP=`$CC -print-prog-name=objdump`
