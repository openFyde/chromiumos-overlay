[
    {
        "comment": "Adds a allowlist of packages that have known memory leaks",
        "rel_patch_path": "llvm-next-leak-allowlist.v2.patch",
        "start_version": 370808
    },
    {
        "comment": "Sets the ASAN message to go to /va/log/asan${pid} by\ndefault",
        "rel_patch_path": "clang-4.0-asan-default-path.patch"
    },
    {
        "comment": "Makes llvm not generate .cgprofile entries when we\ndo not use integrated-as",
        "rel_patch_path": "llvm-9.0-no-cgprofile.patch",
        "end_version": 388757
    },
    {
        "comment": "Used as destination of target generators",
        "rel_patch_path": "cmake/llvm-3.8-allow_custom_cmake_build_types.patch"
    },
    {
        "comment": "Fixes crbug/591436. Force fallback to traditional executable detection",
        "rel_patch_path": "llvm-8.0-clang-executable-detection.v2.patch",
        "start_version": 370808
    },
    {
        "comment": "Temporary workaround. Breakpad cannot handle Dwarf\nVersion 4. Works around issue by forcing Debug Frames\nversion of Dwarf to be version 1, while leaving the rest of\nthe Dwarf data at version 4",
        "rel_patch_path": "llvm-3.9-dwarf-version.patch"
    },
    {
        "comment": "Fixes clang.elf calling clang.elf because direct\ncalls to clang.elf misses all environment setup in clang\nwrapper. Calls to clang wrapper instead of clang.elf binary",
        "rel_patch_path": "llvm-3.8-invocation.patch"
    },
    {
        "comment": "Uses argv[0] to get host system information. Created\na wrapper of LLD and real lld becomes lld.elf so the LLD\ncannot get the host system information and dies",
        "rel_patch_path": "lld-10.0-invoke-name.patch",
        "start_version": 365730
    },
    {
        "comment": "Fix type-dependency of bitfields in templates",
        "rel_patch_path": "cherry/a58017e5cae5be948fd1913b68d46553e87aa622.patch",
        "start_version": 380035,
        "end_version": 384465
    },
    {
        "comment": "[ARM] Fix infinite loop when lowering STRICT_FP_EXTEND",
        "rel_patch_path": "cherry/0ec57972967dfb43fc022c2e3788be041d1db730.patch",
        "start_version": 380035,
        "end_version": 384546
    },
    {
        "comment": "[DAGCombine] Fix alias analysis for unaligned accesses",
        "rel_patch_path": "cherry/1de10705594c7a2c9b8fde901c391bd84062ae04.patch",
        "start_version": 380035,
        "end_version": 385989
    },
    {
        "comment": "[cmake] By default do not build compiler-rt with PGO",
        "rel_patch_path": "cherry/20dfcf189d224e637377970318a021c81d2fbde0.patch",
        "start_version": 380035,
        "end_version": 386784
    },
    {
        "comment": "[cmake] Strip quotes in compiler-rt/lib/crt; error if checks fail",
        "rel_patch_path": "cherry/cfc3e7f458f8798782c01a0dadf872c60340c23e.patch",
        "start_version": 380035,
        "end_version": 386785
    },
    {
        "comment": "[Sema] Fix pointer-to-int-cast diagnostic for _Bool",
        "rel_patch_path": "cherry/56eb15a1c71061043d50aa669407816bc08dfb5d.patch",
        "start_version": 384785,
        "end_version": 385452
    },
    {
        "comment": "[Sema] Add -Wpointer-to-enum-cast and -Wvoid-pointer-to-enum-cast",
        "rel_patch_path": "cherry/2a41b31fcdfcb67ab7038fc2ffb606fd50b83a84.patch",
        "start_version": 384785,
        "end_version": 386665
    },
    {
        "comment": "[X86] Don't add DELETED_NODES to DAG combine worklist after calling",
        "rel_patch_path": "cherry/2f4f8fcf64c67ee327e19b74a82a2330cfb32312.patch",
        "start_version": 385457,
        "end_version": 386077
    },
    {
        "comment": "[ThinLTO/LowerTypeTests] Handle unpromoted local type ids",
        "rel_patch_path": "cherry/873c0d0786dcf22f4af39f65df824917f70f2170.patch",
        "start_version": 384279,
        "end_version": 386151
    },
    {
        "comment": "Revert Restore [WPD/LowerTypeTests] Delay lowering/removal of type tests until after ICP",
        "rel_patch_path": "cherry/80bf137fa132ea33204e98bbefa924afe9258a4e.patch",
        "start_version": 384279,
        "end_version": 386180
    },
    {
        "comment": "Revert Reland [DebugInfo] Enable the debug entry values feature by default",
        "rel_patch_path": "cherry/f82b32a51e22cc56d20f695772797127d3f9d85a.patch",
        "start_version": 386806,
        "end_version": 387212
    },
    {
        "comment": "[JumpThreading] Skip unconditional PredBB when threading jumps through two basic blocks",
        "rel_patch_path": "cherry/13a97305ba77f44eccba16087320c8aa016ac6da.patch",
        "start_version": 383663,
        "end_version": 385016
    },
    {
        "comment": "Revert \"[ARM] Improve codegen of volatile load/store of i64\"",
        "rel_patch_path": "cherry/af2a38458197e07cbd03ea9446714008488826d8.patch",
        "start_version": 380711,
        "end_version": 383972
    },
    {
        "comment": "Revert \"[InstCombine][DebugInfo] Fold constants wrapped in metadata\"",
        "rel_patch_path": "cherry/982944525c7706c4dee00042d5b7cf2f0d87804f.patch",
        "start_version": 383041,
        "end_version": 384124
    },
    {
        "comment": "Revert \"[LICM] Support hosting of dynamic allocas out of loops\"",
        "rel_patch_path": "cherry/14845b2c459021e3dbf2ead52d707d4a7db40cbb.patch",
        "start_version": 376772,
        "end_version": 385655
    },
    {
        "comment": "Revert \"[clang] detect switch fallthrough marked by a comment (PR43465)\"",
        "rel_patch_path": "cherry/c61401b89742f230b7e6a2cc0548fbf7442e906d.patch",
        "start_version": 383396,
        "end_version": 386178
    },
    {
        "comment": "[CUDA] Warn about unsupported CUDA SDK version only if it's used.",
        "rel_patch_path": "cherry/eb2ba2ea953b5ea73cdbb598f77470bde1c6a011.patch",
        "start_version": 382740,
        "end_version": 387062
    },
    {
        "comment": "[DAGCombiner] Do not fold truncate(build_vector(..)) if it creates an illegal type",
        "rel_patch_path": "cherry/edcfb47ff6d5562e22207f364c65f84302aa346b.patch",
        "start_version": 383902,
        "end_version": 387801
    },
    {
        "comment": "Revert d437fba8ef626b6d8b7928540f630163a9b04021",
        "rel_patch_path": "revert-d437fba8ef626b6d8b7928540f630163a9b04021.patch",
        "start_version": 383902,
        "end_version": 391452
    },
    {
        "comment": "PR45181: Fix another invalid DIExpression combination",
        "rel_patch_path": "cherry/636665331bbd4c369a9f33c4d35fb9a863c94646.patch",
        "start_version": 387675,
        "end_version": 387810
    },
    {
        "comment": "[clang][AArch64] readd support for 'p' inline asm constraint",
        "rel_patch_path": "cherry/5d90f886bc022e7c9144a0ef08ea7ccde7e66030.patch",
        "start_version": 387430,
        "end_version": 387475
    },
    {
        "comment": "Revert \"[GISel]: Fix incorrect IRTranslation while translating null pointer types\"",
        "rel_patch_path": "cherry/b8fc192d42af56b17b7d940e6c226f4969e0d851.patch",
        "start_version": 328218,
        "end_version": 388672
    },
    {
        "comment": "Revert \"Convert a reachable llvm_unreachable into an assert.\"",
        "rel_patch_path": "cherry/7339fca25facb566e969b6ce01f23ac96499d574.patch",
        "start_version": 386862,
        "end_version": 388144
    },
    {
        "comment": "Revert \"Include static prof data when collecting loop BBs\"",
        "rel_patch_path": "cherry/c3417592c847b8bd67deab21bbe6d62a49bde234.patch",
        "start_version": 385160,
        "end_version": 388115
    },
    {
        "comment": "Revert \"[FIX] Do not copy an llvm::function_ref if it has to be reused\"",
        "rel_patch_path": "cherry/0d0b90105f92f6cd9cc7004d565834f4429183fb.patch",
        "start_version": 384779,
        "end_version": 387942
    },
    {
        "comment": "Revert \"EHScopeStack::Cleanup has virtual functions so the destructor should be too.\"",
        "rel_patch_path": "cherry/b5eafda8d3ef02f9f78e090725564dd28e573322.patch",
        "start_version": 386136,
        "end_version": 387904
    },
    {
        "comment": "Revert rGe6a7e3b5e3e7 \"[X86][SSE] matchShuffleWithSHUFPD - add support for unary shuffles.\"",
        "rel_patch_path": "cherry/f424d51c3e195de786204a93a9ccf6367bb26c8e.patch",
        "start_version": 386843,
        "end_version": 387882
    },
    {
        "comment": "Revert \"Generate Callee Saved Register (CSR) related cfi directives like .cfi_restore.\"",
        "rel_patch_path": "cherry/a035726e5aae18bb9be1e61d9aef2a102c3b33ba.patch",
        "start_version": 386407,
        "end_version": 387755
    },
    {
        "comment": "Revert \"Avoid emitting unreachable SP adjustments after `throw`\"",
        "rel_patch_path": "cherry/4e0fe038f438ae1679eae9e156e1f248595b2373.patch",
        "start_version": 386616,
        "end_version": 387517
    },
    {
        "comment": "Revert \"[ARM] Improve codegen of volatile load/store of i64\"",
        "rel_patch_path": "cherry/872ee78f65f47fae19d4f8db7396eb56d902aef1.patch",
        "start_version": 386906,
        "end_version": 393974
    },
    {
        "comment": "[LV] Make sure the MaxVF is a power-of-2 by rounding down.",
        "rel_patch_path": "cherry/b446ec56a2987ba02dc2c80d42100be4a4689215.patch",
        "start_version": 394115,
        "end_version": 394897
    },
    {
        "comment": "[ELF] --gdb-index: support .debug_loclists",
        "rel_patch_path": "cherry/1ccde533425a4ba9d379510206ad680ff9702129.patch",
        "start_version": 391452,
        "end_version": 391929
    },
    {
        "comment": "[JumpThreading] ProcessBranchOnXOR(): bailout if any pred ends in indirect branch (PR46857)",
        "rel_patch_path": "cherry/1da9834557cd4302a5183b8228ce063e69f82602.patch",
        "start_version": 398304,
        "end_version": 400503
    },
    {
        "comment": "Fix a crash when the sample profile uses md5 and -sample-profile-merge-inlinee is enabled.",
        "rel_patch_path": "cherry/836991d3676fda06d0f07c816ba855c8a0c3e0aa.patch",
        "start_version": 398649,
        "end_version": 401013
    },
    {
        "comment": "[AutoFDO] Avoid merging inlinee samples multiple times",
        "rel_patch_path": "cherry/d23c1d6a8dddf0e1b9b9fa64726941e402ede8af.patch",
        "start_version": 398649,
        "end_version": 401056
    },
    {
        "comment": "[ELF]: --icf: don't fold sections referencing sections with LCDA after D84610",
        "rel_patch_path": "cherry/164a02d0fa461c623446bb5e3ee15516bcfad13c.patch",
        "start_version": 401512,
        "end_version": 401838
    },
    {
        "comment": "[ELF] Support .cfi_signal_frame",
        "rel_patch_path": "cherry/d30d46193876102a6bc99b527dfaf79be4b09515.patch",
        "start_version": 401512,
        "end_version": 401875
    },
    {
        "comment": "[msan] Support %ms in scanf.",
        "rel_patch_path": "cherry/aa57cabae2fc5abc08ab3e17b45f2890fc7c9e42.patch",
        "start_version": 394483,
        "end_version": 401725
    },
    {
        "comment": "[ELF] Change tombstone values to (.debug_ranges/.debug_loc) 1 and (other .debug_*) 0",
        "rel_patch_path": "cherry/004be4037e1e9c6092323c5c9268acb3ecf9176c.patch",
        "start_version": 397144,
        "end_version": 401729
    },
    {
        "comment": "Implement AVX ABI Warning/error",
        "rel_patch_path": "cherry/2831a317b689c7f005a29f008a8e4c24485c0711.patch",
        "start_version": 394483,
        "end_version": 398009
    },
    {
        "comment": "Make a test case more flexible on Windows wrt the number of backslashes.",
        "rel_patch_path": "cherry/9f0225894254c4706519c85d6fc06c5382903fef.patch",
        "start_version": 400963,
        "end_version": 401010
    },
    {
        "comment": "Revert \"[ELF] Add --dependency-file option\"",
        "rel_patch_path": "cherry/0bd918c828feb599b278c1876a33caa9c295be6a.patch",
        "start_version": 400963,
        "end_version": 401024
    },
    {
        "comment": "Revert \"Switch to using -debug-info-kind=constructor as default (from =limited)\"",
        "rel_patch_path": "cherry/394db2259575ef3cac8d3d37836b11eb2373c435.patch",
        "start_version": 398830,
        "end_version": 400648
    },
    {
        "comment": "[InstCombine] Add test for PR46680 (NFC)",
        "rel_patch_path": "cherry/13ae440de4a408cf9d1a448def09769ecbecfdf7.patch",
        "start_version": 398993,
        "end_version": 399711
    },
    {
        "comment": "[InstCombine] Fix store merge worklist management (PR46680)",
        "rel_patch_path": "cherry/d12ec0f752e7f2c7f7252539da2d124264ec33f7.patch",
        "start_version": 398993,
        "end_version": 399722
    },
    {
        "comment": "Reland \"[InstCombine] Lower infinite combine loop detection thresholds\"",
        "rel_patch_path": "cherry/2f3862eb9f21e8a0d48505637fefe6e5e295c18c.patch",
        "start_version": 398993,
        "end_version": 399726
    },
    {
        "comment": "Revert \"[AddressSanitizer] Don't use weak linkage for __{start,stop}_asan_globals\"",
        "rel_patch_path": "cherry/cf5df40c4cf1a53a02ab1d56a488642e3dda8f6d.patch",
        "start_version": 395282,
        "end_version": 399661
    },
    {
        "comment": "Revert \"[SCEV][IndVarSimplify] insert point should not be block front.\"",
        "rel_patch_path": "cherry/1cd1c1d62edc6693a3854b22d53c9bbc1b149798.patch",
        "start_version": 398848,
        "end_version": 399218
    },
    {
        "comment": "Revert \"[InstCombine] Drop debug loc in TryToSinkInstruction (reland)\"",
        "rel_patch_path": "cherry/3d52b1e81b7b3891d9132d826d4889119fad7d00.patch",
        "start_version": 397614,
        "end_version": 399140
    },
    {
        "comment": "[DWARF] Add cuttoff guarding quadratic validThroughout behaviour",
        "rel_patch_path": "cherry/b9d977b0ca60c54f11615ca9d144c9f08b29fd85.patch",
        "start_version": 398603,
        "end_version": 398603
    },
    {
        "comment": "PR44685: DebugInfo: Handle address-use-invalid type units referencing non-type units",
        "rel_patch_path": "cherry/be3ef93bf58aa5546c7baadfb21d43b75fbb4e24.patch",
        "start_version": 394483,
        "end_version": 402778
    },
    {
        "comment": "[GlobalISel][InlineAsm] Fix matching input constraint to physreg",
        "rel_patch_path": "cherry/d893278bba01b0e1209e8b8accbdd5cfa75a0932.patch",
        "start_version": 399163,
        "end_version": 401652
    },
    {
        "comment": "PR47138: Don't crash if the preferred alignment of an invalid record type is requested.",
        "rel_patch_path": "cherry/269bc3f5df6c3b75de515a48063c6941ef8fbbe6.patch",
        "start_version": 400541,
        "end_version": 402304
    },
    {
        "comment": "Revert \"Canonicalize declaration pointers when forming APValues.\"",
        "rel_patch_path": "cherry/15d94a7d0f8f0d6b3b5308fff51b286957e45650.patch",
        "start_version": 405408,
        "end_version": 405976
    },
    {
        "comment": "Revert \"Canonicalize declaration pointers when forming APValues.\"",
        "rel_patch_path": "cherry/7b0332389afd705f46b02fcf87ec3414b8dece34.patch",
        "start_version": 404252,
        "end_version": 404294
    },
    {
        "comment": "Remove TwoAddressInstructionPass::sink3AddrInstruction.",
        "rel_patch_path": "cherry/60433c63acb71935111304d71e41b7ee982398f8.patch",
        "start_version": 398032,
        "end_version": 399458
    },
    {
        "comment": "[llvm] Add contains(KeyType) -> bool methods to SmallPtrSet",
        "rel_patch_path": "cherry/a0385bd7acd6e1d16224b4257f4cb50e59f1d75e.patch",
        "start_version": 398032,
        "end_version": 399638
    },
    {
        "comment": "Revert \"Outline non returning functions unless a longjmp\"",
        "rel_patch_path": "cherry/9afb1c566e8cb396da495e2fbbbc53e1814cc3a1.patch",
        "start_version": 401139,
        "end_version": 407147
    },
    {
        "comment": "Reland [SimplifyCFG][LoopRotate] SimplifyCFG: disable common instruction hoisting by default, enable late in pipeline",
        "rel_patch_path": "cherry/bb7d3af1139c36270bc9948605e06f40e4c51541.patch",
        "start_version": 403178,
        "end_version": 404489
    },
    {
        "comment": "Revert \"RegAllocFast: Record internal state based on register units\"",
        "rel_patch_path": "cherry/a21387c65470417c58021f8d3194a4510bb64f46.patch",
        "start_version": 404250,
        "end_version": 405159
    },
    {
        "comment": "[NFC][Asan] Rename internal enum value.",
        "rel_patch_path": "cherry/99a93c3a223e3bfc9a9781bfbf98d2fd4551f923.patch",
        "start_version": 404249,
        "end_version": 404300
    },
    {
        "comment": "[NFC][Asan] Inline enum doc strings",
        "rel_patch_path": "cherry/a9c0bf04043462d43013bc5616aa48f6d3e16b88.patch",
        "start_version": 404249,
        "end_version": 404300
    },
    {
        "comment": "[NFC][Asan] Reformat some allocator code",
        "rel_patch_path": "cherry/48ac5b4833b60f00f0923db11ea31e7316bc78c6.patch",
        "start_version": 404249,
        "end_version": 404300
    },
    {
        "comment": "Revert \"[Asan] Cleanup atomic usage in allocator\"",
        "rel_patch_path": "cherry/dbf04aaade235a0d76c6ad549c091c9fd0ada0e8.patch",
        "start_version": 404249,
        "end_version": 404300
    },
    {
        "comment": "[Sema] adds basic -Wfree-nonheap-object functionality",
        "rel_patch_path": "cherry/425a83a5f069eb1a692145d2c92e6d3bfe564a62.patch",
        "start_version": 399094,
        "end_version": 409407
    },
    {
        "comment": "[Sema] adds -Wfree-nonheap-object member var checks",
        "rel_patch_path": "cherry/ba18bc4925d8cbd4a9354629617cbcafbbd48941.patch",
        "start_version": 399094,
        "end_version": 409842
    },
    {
        "comment": "PR47468: Fix findPHICopyInsertPoint, so that copies aren't incorrectly inserted after an INLINEASM_BR.",
        "rel_patch_path": "cherry/f7a53d82c0902147909f28a9295a9d00b4b27d38.patch",
        "start_version": 398032,
        "end_version": 405613
    },
    {
        "comment": "[Driver]: fix compiler-rt path when printing libgcc for baremetal",
        "rel_patch_path": "cherry/18432bea764863d1c42fd569bd3846673ee4e802.patch",
        "start_version": 399094,
        "end_version": 407943
    },
    {
        "comment": "[Inliner] Run always-inliner in inliner-wrapper",
        "rel_patch_path": "cherry/0291e2c9330930bd74bfb8206cf6447a84bf492c.patch",
        "start_version": 399094,
        "end_version": 408784
    },
    {
        "comment": "Fix compiler-rt build on Windows after D89640",
        "rel_patch_path": "cherry/a7acee89d68473183cc5021d952a56cdf0ae27d3.patch",
        "start_version": 408224,
        "end_version": 408314
    }
]