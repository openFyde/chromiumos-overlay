test_va_api: Don't assume our DRM node is first #292

From: https://github.com/intel/libva-utils/pull/292

Similar to:

bfb6b98 exclude vgem node and invalid drm node in vainfo

It's possible to have a vgem node at 128, and the VA-API node is at 129.

Signed-off-by: Brian Norris briannorris@chromium.org

--- a/common/Makefile.am
+++ b/common/Makefile.am
@@ -41,8 +41,8 @@ endif
 
 if USE_DRM
 source_c		+= va_display_drm.c
-libva_display_cflags	+= $(DRM_CFLAGS) $(LIBVA_DRM_CFLAGS) $(DRM_CFLAGS)
-libva_display_libs	+= $(DRM_LIBS) $(LIBVA_DRM_LIBS)
+libva_display_cflags	+= $(LIBVA_DRM_CFLAGS)
+libva_display_libs	+= $(LIBVA_DRM_LIBS)
 endif
 
 if USE_WAYLAND
--- a/configure.ac
+++ b/configure.ac
@@ -148,8 +148,7 @@ fi
 AM_CONDITIONAL(USE_SSP, test "$ssp_cc" = "yes")
 
 # Check for DRM (mandatory)
-PKG_CHECK_MODULES([LIBVA_DRM], [libva-drm])
-PKG_CHECK_MODULES([DRM], [libdrm])
+PKG_CHECK_MODULES([LIBVA_DRM], [libva-drm libdrm])
 
 # Check for libva (for dynamic linking)
 LIBVA_API_MIN_VERSION=libva_api_min_version
--- a/test/test_va_api_fixture.cpp
+++ b/test/test_va_api_fixture.cpp
@@ -29,8 +29,10 @@
 
 #include <fcntl.h> // for O_RDWR
 #include <limits>
+#include <string.h>
 #include <unistd.h> // for close()
 #include <va/va_drm.h>
+#include <xf86drm.h>
 
 namespace VAAPI
 {
@@ -77,22 +79,45 @@ VAAPIFixture::~VAAPIFixture()
 
 static VADisplay getDrmDisplay(int &fd)
 {
-    typedef std::vector<std::string> DevicePaths;
-    typedef DevicePaths::const_iterator DevicePathsIterator;
+    drmDevicePtr devices[32];
+    int ret, max_devices = sizeof(devices) / sizeof(devices[0]);
 
-    static DevicePaths paths({"/dev/dri/renderD128", "/dev/dri/card0"});
+    ret = drmGetDevices2(0, devices, max_devices);
+    EXPECT_TRUE(ret >= 0);
+    if (ret < 0)
+        return NULL;
+    max_devices = ret;
+
+    for (int i = 0; i < max_devices; i++) {
+        for (int j = DRM_NODE_MAX - 1; j >= 0; j--) {
+            drmVersionPtr version;
+
+            if (!(devices[i]->available_nodes & 1 << j))
+                continue;
 
-    const DevicePathsIterator endIt(paths.end());
-    for (DevicePathsIterator it(paths.begin()); it != endIt; ++it) {
-        fd = open(it->c_str(), O_RDWR);
-        if (fd < 0)
-            continue;
-        VADisplay disp = vaGetDisplayDRM(fd);
+            fd = open(devices[i]->nodes[j], O_RDWR);
+            if (fd < 0)
+                continue;
 
-        if (disp)
-            return disp;
+            version = drmGetVersion(fd);
+            if (!version) {
+                close(fd);
+                continue;
+            }
+            if (!strncmp(version->name, "vgem", 4)) {
+                drmFreeVersion(version);
+                close(fd);
+                continue;
+            }
+            drmFreeVersion(version);
 
-        close(fd);
+            VADisplay disp = vaGetDisplayDRM(fd);
+
+            if (disp)
+                return disp;
+
+            close(fd);
+        }
     }
 
     return NULL;
