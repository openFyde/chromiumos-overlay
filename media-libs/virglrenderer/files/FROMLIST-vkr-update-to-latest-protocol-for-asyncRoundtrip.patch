From 37d1a30859ee136cd113c489b84f22a4e939d0f2 Mon Sep 17 00:00:00 2001
From: Yiwei Zhang <zzyiwei@chromium.org>
Date: Wed, 8 Mar 2023 11:54:55 -0800
Subject: [PATCH 2/5] vkr: update to latest protocol for asyncRoundtrip

Signed-off-by: Yiwei Zhang <zzyiwei@chromium.org>
---
 .../venus-protocol/vn_protocol_renderer.h     |   2 +-
 .../vn_protocol_renderer_defines.h            |  21 ++++
 .../vn_protocol_renderer_dispatches.h         |  10 +-
 .../vn_protocol_renderer_transport.h          | 117 ++++++++++++++++++
 4 files changed, 147 insertions(+), 3 deletions(-)

diff --git a/src/venus/venus-protocol/vn_protocol_renderer.h b/src/venus/venus-protocol/vn_protocol_renderer.h
index 19d580ba..2fa290b6 100644
--- a/src/venus/venus-protocol/vn_protocol_renderer.h
+++ b/src/venus/venus-protocol/vn_protocol_renderer.h
@@ -1,4 +1,4 @@
-/* This file is generated by venus-protocol git-b8ca40bb. */
+/* This file is generated by venus-protocol git-8127c731. */
 
 /*
  * Copyright 2020 Google LLC
diff --git a/src/venus/venus-protocol/vn_protocol_renderer_defines.h b/src/venus/venus-protocol/vn_protocol_renderer_defines.h
index dd425cd6..97de896a 100644
--- a/src/venus/venus-protocol/vn_protocol_renderer_defines.h
+++ b/src/venus/venus-protocol/vn_protocol_renderer_defines.h
@@ -355,6 +355,9 @@ typedef enum VkCommandTypeEXT {
     VK_COMMAND_TYPE_vkResetFenceResource100000MESA_EXT = 244,
     VK_COMMAND_TYPE_vkWaitSemaphoreResource100000MESA_EXT = 245,
     VK_COMMAND_TYPE_vkImportSemaphoreResource100000MESA_EXT = 246,
+    VK_COMMAND_TYPE_vkSubmitVirtqueueSeqno100000MESA_EXT = 251,
+    VK_COMMAND_TYPE_vkWaitVirtqueueSeqno100000MESA_EXT = 252,
+    VK_COMMAND_TYPE_vkWaitRingSeqno100000MESA_EXT = 253,
     VK_COMMAND_TYPE_vkGetVenusExperimentalFeatureData100000MESA_EXT = 195,
 } VkCommandTypeEXT;
 
@@ -423,6 +426,7 @@ typedef struct VkVenusExperimentalFeatures100000MESA {
     VkBool32 globalFencing;
     VkBool32 largeRing;
     VkBool32 syncFdFencing;
+    VkBool32 asyncRoundtrip;
 } VkVenusExperimentalFeatures100000MESA;
 
 typedef struct VkMemoryResourceAllocationSizeProperties100000MESA {
@@ -2244,6 +2248,20 @@ struct vn_command_vkImportSemaphoreResource100000MESA {
     const VkImportSemaphoreResourceInfo100000MESA* pImportSemaphoreResourceInfo;
 };
 
+struct vn_command_vkSubmitVirtqueueSeqno100000MESA {
+    uint64_t ring;
+    uint64_t seqno;
+};
+
+struct vn_command_vkWaitVirtqueueSeqno100000MESA {
+    uint64_t seqno;
+};
+
+struct vn_command_vkWaitRingSeqno100000MESA {
+    uint64_t ring;
+    uint64_t seqno;
+};
+
 struct vn_command_vkGetVenusExperimentalFeatureData100000MESA {
     size_t* pDataSize;
     void* pData;
@@ -2506,6 +2524,9 @@ struct vn_dispatch_context {
     void (*dispatch_vkResetFenceResource100000MESA)(struct vn_dispatch_context *ctx, struct vn_command_vkResetFenceResource100000MESA *args);
     void (*dispatch_vkWaitSemaphoreResource100000MESA)(struct vn_dispatch_context *ctx, struct vn_command_vkWaitSemaphoreResource100000MESA *args);
     void (*dispatch_vkImportSemaphoreResource100000MESA)(struct vn_dispatch_context *ctx, struct vn_command_vkImportSemaphoreResource100000MESA *args);
+    void (*dispatch_vkSubmitVirtqueueSeqno100000MESA)(struct vn_dispatch_context *ctx, struct vn_command_vkSubmitVirtqueueSeqno100000MESA *args);
+    void (*dispatch_vkWaitVirtqueueSeqno100000MESA)(struct vn_dispatch_context *ctx, struct vn_command_vkWaitVirtqueueSeqno100000MESA *args);
+    void (*dispatch_vkWaitRingSeqno100000MESA)(struct vn_dispatch_context *ctx, struct vn_command_vkWaitRingSeqno100000MESA *args);
     void (*dispatch_vkGetVenusExperimentalFeatureData100000MESA)(struct vn_dispatch_context *ctx, struct vn_command_vkGetVenusExperimentalFeatureData100000MESA *args);
 };
 
diff --git a/src/venus/venus-protocol/vn_protocol_renderer_dispatches.h b/src/venus/venus-protocol/vn_protocol_renderer_dispatches.h
index 725a0e79..369caffe 100644
--- a/src/venus/venus-protocol/vn_protocol_renderer_dispatches.h
+++ b/src/venus/venus-protocol/vn_protocol_renderer_dispatches.h
@@ -282,6 +282,9 @@ static inline const char *vn_dispatch_command_name(VkCommandTypeEXT type)
     case VK_COMMAND_TYPE_vkResetFenceResource100000MESA_EXT: return "vkResetFenceResource100000MESA";
     case VK_COMMAND_TYPE_vkWaitSemaphoreResource100000MESA_EXT: return "vkWaitSemaphoreResource100000MESA";
     case VK_COMMAND_TYPE_vkImportSemaphoreResource100000MESA_EXT: return "vkImportSemaphoreResource100000MESA";
+    case VK_COMMAND_TYPE_vkSubmitVirtqueueSeqno100000MESA_EXT: return "vkSubmitVirtqueueSeqno100000MESA";
+    case VK_COMMAND_TYPE_vkWaitVirtqueueSeqno100000MESA_EXT: return "vkWaitVirtqueueSeqno100000MESA";
+    case VK_COMMAND_TYPE_vkWaitRingSeqno100000MESA_EXT: return "vkWaitRingSeqno100000MESA";
     case VK_COMMAND_TYPE_vkGetVenusExperimentalFeatureData100000MESA_EXT: return "vkGetVenusExperimentalFeatureData100000MESA";
     case VK_COMMAND_TYPE_vkGetDeviceProcAddr_EXT: return "vkGetDeviceProcAddr";
     case VK_COMMAND_TYPE_vkGetInstanceProcAddr_EXT: return "vkGetInstanceProcAddr";
@@ -298,7 +301,7 @@ static inline const char *vn_dispatch_command_name(VkCommandTypeEXT type)
     }
 }
 
-static void (*const vn_dispatch_table[251])(struct vn_dispatch_context *ctx, VkCommandFlagsEXT flags) = {
+static void (*const vn_dispatch_table[254])(struct vn_dispatch_context *ctx, VkCommandFlagsEXT flags) = {
     [VK_COMMAND_TYPE_vkCreateInstance_EXT] = vn_dispatch_vkCreateInstance,
     [VK_COMMAND_TYPE_vkDestroyInstance_EXT] = vn_dispatch_vkDestroyInstance,
     [VK_COMMAND_TYPE_vkEnumeratePhysicalDevices_EXT] = vn_dispatch_vkEnumeratePhysicalDevices,
@@ -538,6 +541,9 @@ static void (*const vn_dispatch_table[251])(struct vn_dispatch_context *ctx, VkC
     [VK_COMMAND_TYPE_vkResetFenceResource100000MESA_EXT] = vn_dispatch_vkResetFenceResource100000MESA,
     [VK_COMMAND_TYPE_vkWaitSemaphoreResource100000MESA_EXT] = vn_dispatch_vkWaitSemaphoreResource100000MESA,
     [VK_COMMAND_TYPE_vkImportSemaphoreResource100000MESA_EXT] = vn_dispatch_vkImportSemaphoreResource100000MESA,
+    [VK_COMMAND_TYPE_vkSubmitVirtqueueSeqno100000MESA_EXT] = vn_dispatch_vkSubmitVirtqueueSeqno100000MESA,
+    [VK_COMMAND_TYPE_vkWaitVirtqueueSeqno100000MESA_EXT] = vn_dispatch_vkWaitVirtqueueSeqno100000MESA,
+    [VK_COMMAND_TYPE_vkWaitRingSeqno100000MESA_EXT] = vn_dispatch_vkWaitRingSeqno100000MESA,
     [VK_COMMAND_TYPE_vkGetVenusExperimentalFeatureData100000MESA_EXT] = vn_dispatch_vkGetVenusExperimentalFeatureData100000MESA,
 };
 
@@ -553,7 +559,7 @@ static inline void vn_dispatch_command(struct vn_dispatch_context *ctx)
 #ifdef DEBUG
         TRACE_SCOPE_SLOW(vn_dispatch_command_name(cmd_type));
 #endif
-        if (cmd_type < 251 && vn_dispatch_table[cmd_type])
+        if (cmd_type < 254 && vn_dispatch_table[cmd_type])
             vn_dispatch_table[cmd_type](ctx, cmd_flags);
         else
             vn_cs_decoder_set_fatal(ctx->decoder);
diff --git a/src/venus/venus-protocol/vn_protocol_renderer_transport.h b/src/venus/venus-protocol/vn_protocol_renderer_transport.h
index 9b813df5..1a56c000 100644
--- a/src/venus/venus-protocol/vn_protocol_renderer_transport.h
+++ b/src/venus/venus-protocol/vn_protocol_renderer_transport.h
@@ -327,6 +327,63 @@ static inline void vn_encode_vkWriteRingExtraMESA_reply(struct vn_cs_encoder *en
     /* skip args->value */
 }
 
+static inline void vn_decode_vkSubmitVirtqueueSeqno100000MESA_args_temp(struct vn_cs_decoder *dec, struct vn_command_vkSubmitVirtqueueSeqno100000MESA *args)
+{
+    vn_decode_uint64_t(dec, &args->ring);
+    vn_decode_uint64_t(dec, &args->seqno);
+}
+
+static inline void vn_replace_vkSubmitVirtqueueSeqno100000MESA_args_handle(struct vn_command_vkSubmitVirtqueueSeqno100000MESA *args)
+{
+    /* skip args->ring */
+    /* skip args->seqno */
+}
+
+static inline void vn_encode_vkSubmitVirtqueueSeqno100000MESA_reply(struct vn_cs_encoder *enc, const struct vn_command_vkSubmitVirtqueueSeqno100000MESA *args)
+{
+    vn_encode_VkCommandTypeEXT(enc, &(VkCommandTypeEXT){VK_COMMAND_TYPE_vkSubmitVirtqueueSeqno100000MESA_EXT});
+
+    /* skip args->ring */
+    /* skip args->seqno */
+}
+
+static inline void vn_decode_vkWaitVirtqueueSeqno100000MESA_args_temp(struct vn_cs_decoder *dec, struct vn_command_vkWaitVirtqueueSeqno100000MESA *args)
+{
+    vn_decode_uint64_t(dec, &args->seqno);
+}
+
+static inline void vn_replace_vkWaitVirtqueueSeqno100000MESA_args_handle(struct vn_command_vkWaitVirtqueueSeqno100000MESA *args)
+{
+    /* skip args->seqno */
+}
+
+static inline void vn_encode_vkWaitVirtqueueSeqno100000MESA_reply(struct vn_cs_encoder *enc, const struct vn_command_vkWaitVirtqueueSeqno100000MESA *args)
+{
+    vn_encode_VkCommandTypeEXT(enc, &(VkCommandTypeEXT){VK_COMMAND_TYPE_vkWaitVirtqueueSeqno100000MESA_EXT});
+
+    /* skip args->seqno */
+}
+
+static inline void vn_decode_vkWaitRingSeqno100000MESA_args_temp(struct vn_cs_decoder *dec, struct vn_command_vkWaitRingSeqno100000MESA *args)
+{
+    vn_decode_uint64_t(dec, &args->ring);
+    vn_decode_uint64_t(dec, &args->seqno);
+}
+
+static inline void vn_replace_vkWaitRingSeqno100000MESA_args_handle(struct vn_command_vkWaitRingSeqno100000MESA *args)
+{
+    /* skip args->ring */
+    /* skip args->seqno */
+}
+
+static inline void vn_encode_vkWaitRingSeqno100000MESA_reply(struct vn_cs_encoder *enc, const struct vn_command_vkWaitRingSeqno100000MESA *args)
+{
+    vn_encode_VkCommandTypeEXT(enc, &(VkCommandTypeEXT){VK_COMMAND_TYPE_vkWaitRingSeqno100000MESA_EXT});
+
+    /* skip args->ring */
+    /* skip args->seqno */
+}
+
 static inline void vn_decode_vkGetVenusExperimentalFeatureData100000MESA_args_temp(struct vn_cs_decoder *dec, struct vn_command_vkGetVenusExperimentalFeatureData100000MESA *args)
 {
     if (vn_decode_simple_pointer(dec)) {
@@ -507,6 +564,66 @@ static inline void vn_dispatch_vkWriteRingExtraMESA(struct vn_dispatch_context *
     vn_cs_decoder_reset_temp_pool(ctx->decoder);
 }
 
+static inline void vn_dispatch_vkSubmitVirtqueueSeqno100000MESA(struct vn_dispatch_context *ctx, VkCommandFlagsEXT flags)
+{
+    struct vn_command_vkSubmitVirtqueueSeqno100000MESA args;
+
+    if (!ctx->dispatch_vkSubmitVirtqueueSeqno100000MESA) {
+        vn_cs_decoder_set_fatal(ctx->decoder);
+        return;
+    }
+
+    vn_decode_vkSubmitVirtqueueSeqno100000MESA_args_temp(ctx->decoder, &args);
+
+    if (!vn_cs_decoder_get_fatal(ctx->decoder))
+        ctx->dispatch_vkSubmitVirtqueueSeqno100000MESA(ctx, &args);
+
+    if ((flags & VK_COMMAND_GENERATE_REPLY_BIT_EXT) && !vn_cs_decoder_get_fatal(ctx->decoder))
+        vn_encode_vkSubmitVirtqueueSeqno100000MESA_reply(ctx->encoder, &args);
+
+    vn_cs_decoder_reset_temp_pool(ctx->decoder);
+}
+
+static inline void vn_dispatch_vkWaitVirtqueueSeqno100000MESA(struct vn_dispatch_context *ctx, VkCommandFlagsEXT flags)
+{
+    struct vn_command_vkWaitVirtqueueSeqno100000MESA args;
+
+    if (!ctx->dispatch_vkWaitVirtqueueSeqno100000MESA) {
+        vn_cs_decoder_set_fatal(ctx->decoder);
+        return;
+    }
+
+    vn_decode_vkWaitVirtqueueSeqno100000MESA_args_temp(ctx->decoder, &args);
+
+    if (!vn_cs_decoder_get_fatal(ctx->decoder))
+        ctx->dispatch_vkWaitVirtqueueSeqno100000MESA(ctx, &args);
+
+    if ((flags & VK_COMMAND_GENERATE_REPLY_BIT_EXT) && !vn_cs_decoder_get_fatal(ctx->decoder))
+        vn_encode_vkWaitVirtqueueSeqno100000MESA_reply(ctx->encoder, &args);
+
+    vn_cs_decoder_reset_temp_pool(ctx->decoder);
+}
+
+static inline void vn_dispatch_vkWaitRingSeqno100000MESA(struct vn_dispatch_context *ctx, VkCommandFlagsEXT flags)
+{
+    struct vn_command_vkWaitRingSeqno100000MESA args;
+
+    if (!ctx->dispatch_vkWaitRingSeqno100000MESA) {
+        vn_cs_decoder_set_fatal(ctx->decoder);
+        return;
+    }
+
+    vn_decode_vkWaitRingSeqno100000MESA_args_temp(ctx->decoder, &args);
+
+    if (!vn_cs_decoder_get_fatal(ctx->decoder))
+        ctx->dispatch_vkWaitRingSeqno100000MESA(ctx, &args);
+
+    if ((flags & VK_COMMAND_GENERATE_REPLY_BIT_EXT) && !vn_cs_decoder_get_fatal(ctx->decoder))
+        vn_encode_vkWaitRingSeqno100000MESA_reply(ctx->encoder, &args);
+
+    vn_cs_decoder_reset_temp_pool(ctx->decoder);
+}
+
 static inline void vn_dispatch_vkGetVenusExperimentalFeatureData100000MESA(struct vn_dispatch_context *ctx, VkCommandFlagsEXT flags)
 {
     struct vn_command_vkGetVenusExperimentalFeatureData100000MESA args;
-- 
2.37.3

