From cd93601f7d59dff99f5e3f04e49d9ccc851f581e Mon Sep 17 00:00:00 2001
From: "Sergeev, Ilya" <ilya.sergeev@intel.com>
Date: Tue, 15 Nov 2022 18:31:42 +0000
Subject: [PATCH 2/2] FROMGIT: FROMLIST: iHD: [VP9][Encode] Unaligned height
 corruption - fix U-plane offset for Linux

1. Different U plane offset getting for Linux
2. Ignore bigger real size of the recon surface

(cherry picked from commit 20d2ea7760762e1dcc2e21d9f32a828c7a320e9b https://github.com/intel-innersource/drivers.gpu.unified)

BUG=b:231639580
TEST= emerge- libva-intel-media-driver
---
 .../codec/hal/codechal_vdenc_vp9_g12.cpp      | 26 +++++++++----------
 .../gen12/codec/hal/codechal_vdenc_vp9_g12.h  |  2 +-
 2 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.cpp b/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.cpp
index f9de370e90fd..833c6c2725bd 100644
--- a/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.cpp
+++ b/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.cpp
@@ -3451,12 +3451,10 @@ MOS_STATUS CodechalVdencVp9StateG12::SetPictureStructs()
     return eStatus;
 }
 
-void CodechalVdencVp9StateG12::fill_pad_with_value(PMOS_SURFACE psSurface)
+void CodechalVdencVp9StateG12::fill_pad_with_value(PMOS_SURFACE psSurface, uint32_t real_height, uint32_t aligned_height)
 {
-    uint32_t aligned_height = MOS_ALIGN_CEIL(psSurface->dwHeight, CODEC_VP9_MIN_BLOCK_WIDTH);
-
     // unaligned surfaces only
-    if (aligned_height == psSurface->dwHeight)
+    if (aligned_height == real_height)
     {
         return;
     }
@@ -3476,12 +3474,12 @@ void CodechalVdencVp9StateG12::fill_pad_with_value(PMOS_SURFACE psSurface)
 
         uint8_t *src_data_y = src_data + psSurface->dwOffset;
 
-        uint32_t y_plane_size      = psSurface->dwPitch * psSurface->dwHeight;
-        uint32_t y_plane_size_full = psSurface->dwPitch * aligned_height;
+        uint32_t plane_size      = psSurface->dwPitch * real_height;
+        uint32_t plane_size_full = psSurface->UPlaneOffset.iSurfaceOffset;
 
-        uint8_t *src_data_y_end = src_data_y + y_plane_size;
+        uint8_t *src_data_y_end = src_data_y + plane_size;
 
-        uint32_t y_pad_rows = aligned_height - psSurface->dwHeight;
+        uint32_t y_pad_rows = aligned_height - real_height;
         uint32_t y_pad_length = y_pad_rows * psSurface->dwPitch;
 
         if (src_data_y_end > src_data_y_end - y_pad_length)
@@ -3489,9 +3487,9 @@ void CodechalVdencVp9StateG12::fill_pad_with_value(PMOS_SURFACE psSurface)
             memcpy_s(src_data_y_end, y_pad_length, src_data_y_end - y_pad_length, y_pad_length);
         }
 
-        uint32_t uv_plane_size      = (psSurface->dwPitch * psSurface->dwHeight)/2;
-        uint32_t uv_plane_size_full = y_plane_size_full / 2;
-        uint8_t *src_data_uv_end = src_data_y + y_plane_size_full + uv_plane_size;
+        uint32_t uv_plane_size      = (psSurface->dwPitch * real_height)/2;
+        uint32_t uv_plane_size_full = plane_size_full / 2;
+        uint8_t *src_data_uv_end = src_data_y + plane_size_full + uv_plane_size;
 
         if (src_data_uv_end - y_pad_length > src_data_y_end)
         {
@@ -3941,8 +3939,10 @@ MOS_STATUS CodechalVdencVp9StateG12::ExecutePictureLevel()
 
     if (MEDIA_IS_WA(m_waTable, Wa_Vp9UnalignedHeight))
     {
-        fill_pad_with_value(surfaceParams[CODECHAL_HCP_SRC_SURFACE_ID].psSurface);
-        fill_pad_with_value(surfaceParams[CODECHAL_HCP_DECODED_SURFACE_ID].psSurface);
+        uint32_t real_height = surfaceParams[CODECHAL_HCP_SRC_SURFACE_ID].psSurface->dwHeight;
+        uint32_t aligned_height = MOS_ALIGN_CEIL(real_height, CODEC_VP9_MIN_BLOCK_WIDTH);
+        fill_pad_with_value(surfaceParams[CODECHAL_HCP_SRC_SURFACE_ID].psSurface, real_height, aligned_height);
+        fill_pad_with_value(surfaceParams[CODECHAL_HCP_DECODED_SURFACE_ID].psSurface, real_height, aligned_height);
     }
         
     if (m_pictureCodingType != I_TYPE)
diff --git a/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.h b/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.h
index ae6b7920c218..6922aeb5ee2a 100644
--- a/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.h
+++ b/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.h
@@ -1314,6 +1314,6 @@ public:
         PMOS_COMMAND_BUFFER cmdBuffer,
         uint32_t            currPass);
 
-    void fill_pad_with_value(PMOS_SURFACE psSurface);
+    void fill_pad_with_value(PMOS_SURFACE psSurface, uint32_t real_height, uint32_t alogned_height);
 };
 #endif  // __CODECHAL_VDENC_VP9_G12_H__
-- 
2.37.3

