From 529790c99dc1bc9798e9dd7923dd8d7943f66a07 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Corentin=20No=C3=ABl?= <corentin.noel@collabora.com>
Date: Tue, 2 May 2023 14:09:37 +0200
Subject: [PATCH 16/17] UPSTREAM: tgsi: Add sanity checks to avoid out-of-bound
 access
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The assertions are disabled in release builds so better double them with graceful
handling of the issue.

Change-Id: I87b00f3c3150cc124b9bd518a1c361f0065c8ee4
Signed-off-by: Corentin NoÃ«l <corentin.noel@collabora.com>
Part-of: <f{merge_request.web_url}>
(cherry picked from commit a6716eeeb3fe4278e1e2df139a02f80970493015)
---
 src/gallium/auxiliary/tgsi/tgsi_scan.c | 21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)

diff --git a/src/gallium/auxiliary/tgsi/tgsi_scan.c b/src/gallium/auxiliary/tgsi/tgsi_scan.c
index a1780ccb..49c837c7 100644
--- a/src/gallium/auxiliary/tgsi/tgsi_scan.c
+++ b/src/gallium/auxiliary/tgsi/tgsi_scan.c
@@ -219,12 +219,18 @@ tgsi_scan_shader(const struct tgsi_token *tokens,
                }
                /* MSAA samplers */
                if (src->Register.File == TGSI_FILE_SAMPLER) {
-                  assert(fullinst->Instruction.Texture);
-                  assert((unsigned)src->Register.Index < ARRAY_SIZE(info->is_msaa_sampler));
+                  if (!fullinst->Instruction.Texture) {
+                     debug_printf("TGSI: unspecified sampler instruction texture");
+                     return false;
+                  }
+
+                  if (fullinst->Texture.Texture == TGSI_TEXTURE_2D_MSAA ||
+                       fullinst->Texture.Texture == TGSI_TEXTURE_2D_ARRAY_MSAA) {
+                     if ((unsigned)src->Register.Index >= ARRAY_SIZE(info->is_msaa_sampler)) {
+                        debug_printf("TGSI: sampler ID %d out of range", src->Register.Index);
+                        return false;
+                     }
 
-                  if (fullinst->Instruction.Texture &&
-                      (fullinst->Texture.Texture == TGSI_TEXTURE_2D_MSAA ||
-                       fullinst->Texture.Texture == TGSI_TEXTURE_2D_ARRAY_MSAA)) {
                      info->is_msaa_sampler[src->Register.Index] = TRUE;
                   }
                }
@@ -310,6 +316,11 @@ tgsi_scan_shader(const struct tgsi_token *tokens,
                         MAX2(info->const_file_max[buffer], (int)reg);
                }
                else if (file == TGSI_FILE_INPUT) {
+                  if (reg >= PIPE_MAX_SHADER_INPUTS) {
+                     debug_printf("TGSI Error: number of input register %d is out of range", reg);
+                     return false;
+                  }
+
                   info->input_semantic_name[reg] = (ubyte) semName;
                   info->input_semantic_index[reg] = (ubyte) semIndex;
                   info->input_interpolate[reg] = (ubyte)fulldecl->Interp.Interpolate;
-- 
2.39.2

