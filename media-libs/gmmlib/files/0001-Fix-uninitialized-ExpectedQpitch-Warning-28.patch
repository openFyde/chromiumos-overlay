From 88ce46d165576b4e3fdffbaaee9caf3ab9cf0135 Mon Sep 17 00:00:00 2001
From: johnmach <john.machado@intel.com>
Date: Mon, 8 Mar 2021 11:09:02 +0530
Subject: [PATCH 1/4] Fix uninitialized ExpectedQpitch Warning (#28)

---
 Source/GmmLib/ULT/GmmGen12ResourceULT.cpp     | 4 ++--
 Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp | 4 ++--
 Source/GmmLib/ULT/GmmResourceULT.cpp          | 4 ++--
 3 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/Source/GmmLib/ULT/GmmGen12ResourceULT.cpp b/Source/GmmLib/ULT/GmmGen12ResourceULT.cpp
index da4f9a4..6ca5919 100644
--- a/Source/GmmLib/ULT/GmmGen12ResourceULT.cpp
+++ b/Source/GmmLib/ULT/GmmGen12ResourceULT.cpp
@@ -2286,7 +2286,7 @@ TEST_F(CTestGen12Resource, DISABLED_TestDepthCompressedResource)
             VerifyResourcePitch<true>(ResourceInfo, ExpectedPitch);
             VerifyResourcePitchInTiles<true>(ResourceInfo, 4); // 2 tileY wide
 
-            uint32_t ExpectedQPitch;
+            uint32_t ExpectedQPitch = 0;
             if(gmmParams.ArraySize > 1 || gmmParams.Type == RESOURCE_CUBE)
             {
                 ExpectedQPitch = GMM_ULT_ALIGN(gmmParams.BaseHeight, VAlign);
@@ -2324,7 +2324,7 @@ TEST_F(CTestGen12Resource, DISABLED_TestDepthCompressedResource)
             VerifyResourcePitch<true>(ResourceInfo, ExpectedPitch);
             VerifyResourcePitchInTiles<true>(ResourceInfo, 4); // 2 tile wide
 
-            uint32_t TwoDQPitch, ExpectedQPitch;
+            uint32_t TwoDQPitch, ExpectedQPitch = 0;
             if(gmmParams.Type == RESOURCE_3D)
             {
                 TwoDQPitch     = GMM_ULT_ALIGN(gmmParams.BaseHeight, VAlign);
diff --git a/Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp b/Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp
index f7ae8b1..7e9242a 100644
--- a/Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp
+++ b/Source/GmmLib/ULT/GmmGen12dGPUResourceULT.cpp
@@ -2291,7 +2291,7 @@ TEST_F(CTestGen12dGPUResource, DISABLED_TestDepthCompressedResource)
             VerifyResourcePitch<true>(ResourceInfo, ExpectedPitch);
             VerifyResourcePitchInTiles<true>(ResourceInfo, 4); // 2 tileY wide
 
-            uint32_t ExpectedQPitch;
+            uint32_t ExpectedQPitch = 0;
             if(gmmParams.ArraySize > 1 || gmmParams.Type == RESOURCE_CUBE)
             {
                 ExpectedQPitch = GMM_ULT_ALIGN(gmmParams.BaseHeight, VAlign);
@@ -2329,7 +2329,7 @@ TEST_F(CTestGen12dGPUResource, DISABLED_TestDepthCompressedResource)
             VerifyResourcePitch<true>(ResourceInfo, ExpectedPitch);
             VerifyResourcePitchInTiles<true>(ResourceInfo, 4); // 2 tile wide
 
-            uint32_t TwoDQPitch, ExpectedQPitch;
+            uint32_t TwoDQPitch, ExpectedQPitch = 0;
             if(gmmParams.Type == RESOURCE_3D)
             {
                 TwoDQPitch     = GMM_ULT_ALIGN(gmmParams.BaseHeight, VAlign);
diff --git a/Source/GmmLib/ULT/GmmResourceULT.cpp b/Source/GmmLib/ULT/GmmResourceULT.cpp
index 146b65d..d4df450 100644
--- a/Source/GmmLib/ULT/GmmResourceULT.cpp
+++ b/Source/GmmLib/ULT/GmmResourceULT.cpp
@@ -2448,7 +2448,7 @@ TEST_F(CTestResource, TestSeparateStencil)
         VerifyResourcePitch<true>(ResourceInfo, ExpectedPitch);
         VerifyResourcePitchInTiles<true>(ResourceInfo, 2); // 2 tiles wide
 
-        uint32_t ExpectedQPitch;
+        uint32_t ExpectedQPitch = 0;
         if(gmmParams.ArraySize > 1 || gmmParams.Type == RESOURCE_CUBE)
         {
             ExpectedQPitch = GMM_ULT_ALIGN(gmmParams.BaseHeight, VAlign); //Interleaved rows for TileW-arrangement - but Qpitch calculated w/o interleaving in mind. No Qpitch for 3d, only for 2d-array and cube on Gen8
@@ -2504,7 +2504,7 @@ TEST_F(CTestResource, TestSeparateStencil)
         VerifyResourcePitch<true>(ResourceInfo, ExpectedPitch);
         VerifyResourcePitchInTiles<true>(ResourceInfo, 2); // 2 tile wide
 
-        uint32_t TwoDQPitch, ExpectedQPitch;
+        uint32_t TwoDQPitch, ExpectedQPitch = 0;
         {
             TwoDQPitch = GMM_ULT_ALIGN(gmmParams.BaseHeight, VAlign); //Interleaved rows for TileW-arrangement - but Qpitch calculated w/o interleaving in mind. No Qpitch for 3d, only for 2d-array and cube on Gen8
             //GMM_ULT_ALIGN(GMM_ULT_ALIGN(gmmParams.BaseHeight, VAlign)/2, VAlign); //Doesn't HW expect distance in rows between 2 cube-faces (array slices) : It does so, but in logical view not physical view, so not interleaved rows.
-- 
2.25.1

