From 0ae4b6ef04698b45d476ff8687b20b9488532261 Mon Sep 17 00:00:00 2001
From: ryanthua <ryan.t.huang@intel.com>
Date: Mon, 25 Jan 2021 10:21:25 +0800
Subject: [PATCH] [VP] Not returning error when not setting
 VAProcPipelineParameterBuffer

This way will be more convinient for application. Setting VAConfigAttribDecProcessing to
VA_DEC_PROCESSING but only passing VAProcPipelineParameterBuffer when application wants to do scaling.

(cherry picked from commit fa4084c89c0437a47c3ff70eabe53a9474d733a4)
---
 .../agnostic/common/codec/hal/codechal_decode_sfc.cpp       | 6 ++++++
 .../linux/common/codec/ddi/media_ddi_decode_base.cpp        | 1 +
 2 files changed, 7 insertions(+)

diff --git a/media_driver/agnostic/common/codec/hal/codechal_decode_sfc.cpp b/media_driver/agnostic/common/codec/hal/codechal_decode_sfc.cpp
index fa9e9b14..244ff513 100644
--- a/media_driver/agnostic/common/codec/hal/codechal_decode_sfc.cpp
+++ b/media_driver/agnostic/common/codec/hal/codechal_decode_sfc.cpp
@@ -743,6 +743,12 @@ bool CodechalSfcState::IsSfcOutputSupported(
         return false;
     }
 
+    if (Mos_ResourceIsNull(&decodeProcParams->m_outputSurface->OsResource))
+    {
+        CODECHAL_DECODE_NORMALMESSAGE("m_outputSurface->OsResource is Null");
+        return false;
+    }
+
     PMOS_SURFACE srcSurface = decodeProcParams->m_inputSurface;
     PMOS_SURFACE destSurface = decodeProcParams->m_outputSurface;
 
diff --git a/media_driver/linux/common/codec/ddi/media_ddi_decode_base.cpp b/media_driver/linux/common/codec/ddi/media_ddi_decode_base.cpp
index 066a8cb3..8e3ca712 100644
--- a/media_driver/linux/common/codec/ddi/media_ddi_decode_base.cpp
+++ b/media_driver/linux/common/codec/ddi/media_ddi_decode_base.cpp
@@ -694,6 +694,7 @@ VAStatus DdiMediaDecode::ExtraDownScaling(
     }
 
     if(m_ddiDecodeCtx->DecodeParams.m_procParams != nullptr &&
+       m_procBuf &&
        !isDecodeDownScalingSupported)
     {
         //check vp context
-- 
2.17.1

