From 0476bdca0cb7c8604f179048a856d92ea18c69b5 Mon Sep 17 00:00:00 2001
From: Adhemerval Zanella <adhemerval.zanella@linaro.org>
Date: Thu, 10 Mar 2022 10:01:09 -0300
Subject: [PATCH 082/163] iconvdata: Suppress clang warning on locale
 definitions

---
 iconvdata/gbk.c             |  5 +++++
 iconvdata/iso-2022-cn-ext.c | 16 +++++-----------
 iconvdata/iso-2022-cn.c     |  5 +++++
 3 files changed, 15 insertions(+), 11 deletions(-)

diff --git a/iconvdata/gbk.c b/iconvdata/gbk.c
index 97717181f4..de910b3da6 100644
--- a/iconvdata/gbk.c
+++ b/iconvdata/gbk.c
@@ -13212,6 +13212,10 @@ static const char __gbk_from_ucs4_tab12[][2] =
   }
 #include <iconv/loop.c>
 
+/* clang issues an warning adding 'unsigned int' to a string does not append
+   to the string, however it is exactly what code means here.  */
+DIAG_PUSH_NEEDS_COMMENT_CLANG;
+DIAG_IGNORE_NEEDS_COMMENT_CLANG (13, "-Wstring-plus-int");
 
 /* Next, define the other direction.  */
 #define MIN_NEEDED_INPUT	MIN_NEEDED_TO
@@ -13493,6 +13497,7 @@ static const char __gbk_from_ucs4_tab12[][2] =
 #define LOOP_NEED_FLAGS
 #include <iconv/loop.c>
 
+DIAG_POP_NEEDS_COMMENT_CLANG;
 
 /* Now define the toplevel functions.  */
 #include <iconv/skeleton.c>
diff --git a/iconvdata/iso-2022-cn-ext.c b/iconvdata/iso-2022-cn-ext.c
index e09f358cad..7d84560b42 100644
--- a/iconvdata/iso-2022-cn-ext.c
+++ b/iconvdata/iso-2022-cn-ext.c
@@ -387,6 +387,10 @@ enum
 #define LOOP_NEED_FLAGS
 #include <iconv/loop.c>
 
+/* clang issues an warning adding 'int' to a string does not append
+   to the string, however it is exactly what code means here.  */
+DIAG_PUSH_NEEDS_COMMENT_CLANG;
+DIAG_IGNORE_NEEDS_COMMENT_CLANG (13, "-Wstring-plus-int");
 
 /* Next, define the other direction.  */
 #define MIN_NEEDED_INPUT	TO_LOOP_MIN_NEEDED_FROM
@@ -394,16 +398,6 @@ enum
 #define MIN_NEEDED_OUTPUT	TO_LOOP_MIN_NEEDED_TO
 #define MAX_NEEDED_OUTPUT	TO_LOOP_MAX_NEEDED_TO
 #define LOOPFCT			TO_LOOP
-/* With GCC 5.3 when compiling with -Os the compiler emits a warning
-   that buf[0] and buf[1] may be used uninitialized.  This can only
-   happen in the case where tmpbuf[3] is used, and in that case the
-   write to the tmpbuf[1] and tmpbuf[2] was assured because
-   ucs4_to_cns11643 would have filled in those entries.  The difficulty
-   is in getting the compiler to see this logic because tmpbuf[0] is
-   involved in determining the code page and is the indicator that
-   tmpbuf[2] is initialized.  */
-DIAG_PUSH_NEEDS_COMMENT;
-DIAG_IGNORE_Os_NEEDS_COMMENT (5, "-Wmaybe-uninitialized");
 #define BODY \
   {									      \
     uint32_t ch;							      \
@@ -655,7 +649,6 @@ DIAG_IGNORE_Os_NEEDS_COMMENT (5, "-Wmaybe-uninitialized");
     /* Now that we wrote the output increment the input pointer.  */	      \
     inptr += 4;								      \
   }
-DIAG_POP_NEEDS_COMMENT;
 #define EXTRA_LOOP_DECLS	, int *setp
 #define INIT_PARAMS		int set = (*setp >> 3) & CURRENT_MASK; \
 				int ann = (*setp >> 3) & ~CURRENT_MASK
@@ -669,6 +662,7 @@ DIAG_POP_NEEDS_COMMENT;
 #define LOOP_NEED_FLAGS
 #include <iconv/loop.c>
 
+DIAG_POP_NEEDS_COMMENT_CLANG;
 
 /* Now define the toplevel functions.  */
 #include <iconv/skeleton.c>
diff --git a/iconvdata/iso-2022-cn.c b/iconvdata/iso-2022-cn.c
index 9d605fe11c..0de18c5753 100644
--- a/iconvdata/iso-2022-cn.c
+++ b/iconvdata/iso-2022-cn.c
@@ -227,6 +227,10 @@ enum
 #define UPDATE_PARAMS		*setp = set | ann
 #include <iconv/loop.c>
 
+/* clang issues an warning adding 'int' to a string does not append
+   to the string, however it is exactly what code means here.  */
+DIAG_PUSH_NEEDS_COMMENT_CLANG;
+DIAG_IGNORE_NEEDS_COMMENT_CLANG (13, "-Wstring-plus-int");
 
 /* Next, define the other direction.  */
 #define MIN_NEEDED_INPUT	TO_LOOP_MIN_NEEDED_FROM
@@ -401,6 +405,7 @@ enum
 #define UPDATE_PARAMS		*setp = set | ann
 #include <iconv/loop.c>
 
+DIAG_POP_NEEDS_COMMENT_CLANG;
 
 /* Now define the toplevel functions.  */
 #include <iconv/skeleton.c>
-- 
2.37.2

