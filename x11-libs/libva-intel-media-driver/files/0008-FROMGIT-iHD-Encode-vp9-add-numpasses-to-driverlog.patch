From d7b84abf05ce119b881a3eeba5bfa13d3a33a0d3 Mon Sep 17 00:00:00 2001
From: qiangpan1 <qiang.pan@intel.com>
Date: Mon, 13 Jun 2022 17:31:51 +0800
Subject: [PATCH 1/4] FROMGIT: iHD: [Encode] vp9 add numpasses to driverlog

1. set Notfirstpass field in pic state
2. set numpasses to status report
3. dump numpasses to driverlog

(cherry picked from commit a97d23c881f0b7b3ce05961c6410294919882e52 https://github.com/intel/media-driver.git)

BUG=b:231639580
TEST= emerge- libva-intel-media-driver

Signed-off-by: Gareth Yu <gareth.yu@intel.com>
---
 .../codec/hal/codechal_vdenc_vp9_xe_hpm.cpp   |  1 +
 .../codec/hal/codechal_vdenc_vp9_g12.cpp      | 34 +++++++++++++++++++
 .../gen12/codec/hal/codechal_vdenc_vp9_g12.h  |  5 +++
 3 files changed, 40 insertions(+)

diff --git a/media_driver/agnostic/Xe_M/Xe_HPM/codec/hal/codechal_vdenc_vp9_xe_hpm.cpp b/media_driver/agnostic/Xe_M/Xe_HPM/codec/hal/codechal_vdenc_vp9_xe_hpm.cpp
index b5bab49aadca..35b1bb18e875 100644
--- a/media_driver/agnostic/Xe_M/Xe_HPM/codec/hal/codechal_vdenc_vp9_xe_hpm.cpp
+++ b/media_driver/agnostic/Xe_M/Xe_HPM/codec/hal/codechal_vdenc_vp9_xe_hpm.cpp
@@ -1091,6 +1091,7 @@ MOS_STATUS CodechalVdencVp9StateXe_Xpm::ConstructPicStateBatchBuf(
     picState.uiMaxBitRate = m_vp9SeqParams->MaxBitRate * CODECHAL_ENCODE_BRC_KBPS;
     picState.uiMinBitRate = m_vp9SeqParams->MinBitRate * CODECHAL_ENCODE_BRC_KBPS;
     m_hucPicStateOffset = (uint16_t)constructedCmdBuf.iOffset;
+    picState.bNonFirstPassFlag = !IsFirstPass();
 
     eStatus = m_hcpInterface->AddHcpVp9PicStateEncCmd(&constructedCmdBuf, nullptr, &picState);
     if (eStatus != MOS_STATUS_SUCCESS)
diff --git a/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.cpp b/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.cpp
index 166709a965b2..180664e1895c 100644
--- a/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.cpp
+++ b/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.cpp
@@ -2093,6 +2093,7 @@ MOS_STATUS CodechalVdencVp9StateG12::GetStatusReport(
     {
         encodeStatusReport->bitstreamSize = encodeStatus->dwMFCBitstreamByteCountPerFrame + encodeStatus->dwHeaderBytesInserted;
         encodeStatusReport->NumberPasses = (uint8_t)encodeStatus->dwNumberPasses;
+        ENCODE_VERBOSEMESSAGE("statusReportData->numberPasses: %d\n", encodeStatusReport->NumberPasses);
         encodeStatusReport->CodecStatus = CODECHAL_STATUS_SUCCESSFUL;
         return eStatus;
     }
@@ -2579,6 +2580,34 @@ MOS_STATUS CodechalVdencVp9StateG12::SetTileCommands(
     return eStatus;
 }
 
+MOS_STATUS CodechalVdencVp9StateG12::StoreNumPasses(
+    EncodeStatusBuffer *encodeStatusBuf,
+    MhwMiInterface     *miInterface,
+    PMOS_COMMAND_BUFFER cmdBuffer,
+    uint32_t            currPass)
+{
+    MHW_MI_STORE_DATA_PARAMS storeDataParams;
+    uint32_t                 offset;
+    MOS_STATUS               eStatus = MOS_STATUS_SUCCESS;
+
+    CODECHAL_ENCODE_FUNCTION_ENTER;
+
+    CODECHAL_ENCODE_CHK_NULL_RETURN(encodeStatusBuf);
+    CODECHAL_ENCODE_CHK_NULL_RETURN(miInterface);
+    CODECHAL_ENCODE_CHK_NULL_RETURN(cmdBuffer);
+
+    offset =
+        (encodeStatusBuf->wCurrIndex * encodeStatusBuf->dwReportSize) +
+        encodeStatusBuf->dwNumPassesOffset +  // Num passes offset
+        sizeof(uint32_t) * 2;                 // pEncodeStatus is offset by 2 DWs in the resource
+
+    storeDataParams.pOsResource      = &encodeStatusBuf->resStatusBuffer;
+    storeDataParams.dwResourceOffset = offset;
+    storeDataParams.dwValue          = currPass + 1;
+    CODECHAL_ENCODE_CHK_STATUS_RETURN(miInterface->AddMiStoreDataImmCmd(cmdBuffer, &storeDataParams));
+
+    return MOS_STATUS_SUCCESS;
+}
 MOS_STATUS CodechalVdencVp9StateG12::ExecuteTileLevel()
 {
     MOS_STATUS eStatus = MOS_STATUS_SUCCESS;
@@ -2700,6 +2729,11 @@ MOS_STATUS CodechalVdencVp9StateG12::ExecuteTileLevel()
     {
         m_lastTaskInPhase = true; //HPU singletask phase mode only
     }
+    CODECHAL_ENCODE_CHK_STATUS_RETURN(StoreNumPasses(
+        &(m_encodeStatusBuf),
+        m_miInterface,
+        &cmdBuffer,
+        m_currPass));
 
     if (!m_singleTaskPhaseSupported || m_lastTaskInPhase || m_scalableMode)
     {
diff --git a/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.h b/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.h
index 8e9f95a2cee3..956a4852e563 100644
--- a/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.h
+++ b/media_driver/agnostic/gen12/codec/hal/codechal_vdenc_vp9_g12.h
@@ -1308,5 +1308,10 @@ public:
         PMOS_COMMAND_BUFFER cmdBuffer);
     MOS_STATUS SetDmemHuCVp9Prob() override;
     MOS_STATUS InsertConditionalBBEndWithHucErrorStatus(PMOS_COMMAND_BUFFER cmdBuffer);
+    MOS_STATUS StoreNumPasses(
+        EncodeStatusBuffer *encodeStatusBuf,
+        MhwMiInterface     *miInterface,
+        PMOS_COMMAND_BUFFER cmdBuffer,
+        uint32_t            currPass);
 };
 #endif  // __CODECHAL_VDENC_VP9_G12_H__
-- 
2.31.0

